{"version":3,"sources":["src/globalStyles.js","src/service/api.js","src/service/newsData.js","src/service/newsSearch.js","src/utils/getLang.js","src/components/TextFormated/index.js","src/screens/Posts/styles.js","src/screens/Posts/index.js","src/components/Search/styles.js","src/components/Search/index.js","src/screens/LandingPage/index.js","src/components/Comment/styles.js","src/components/Comment/index.js","src/screens/SinglePost/styles.js","src/screens/SinglePost/index.js","src/Routes.js","App.js"],"names":["windowWidth","Dimensions","get","width","windowHeight","height","colors","globalStyles","StyleSheet","create","fill","flex","backgound","backgroundColor","Globalbox","alignSelf","alignItems","subBox","minHeight","postBox","display","marginHorizontal","marginVertical","maxWidth","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","containerTextPostBox","paddingTop","paddingBottom","mainTitle","marginBottom","textAlign","color","textShadowColor","textShadowOffset","textShadowRadius","fontSize","title","text","api","axios","baseURL","timeout","headers","newsData","lang","a","async","then","response","data","articles","newsSearch","search","getLang","rawLang","Platform","OS","navigator","language","userLanguage","NativeModules","SettingsManager","settings","AppleLocale","AppleLanguages","I18nManager","localeIdentifier","substring","toLowerCase","TextFormatedRegular","children","style","styleOfFont","styles","fontWeight","TextFormatedBold","Text","fontFamily","container","image","borderRadius","newsTitle","paddingHorizontal","actionsContainer","flexDirection","clipAdvice","iconsContainer","icon","paddingRight","lastIcon","Posts","media","link","summary","useState","displayclipboardMessage","setDisplayclipboardMessage","SafeAreaView","TouchableOpacity","onPress","Linking","openURL","Image","source","uri","View","textToClipBoard","setTimeout","Clipboard","setString","shareOpt","message","url","Share","share","console","log","alert","shareContent","AntDesign","name","size","Entypo","padding","borderWidth","borderColor","justifyContent","searchIcon","margin","searchInput","Search","setStateSearch","stateSearch","actionOnSubmit","onClick","TextInput","keyboardType","selectTextOnFocus","select","web","outlineStyle","onChangeText","defaultValue","onSubmitEditing","LandingPage","newsDatas","setNewsDatas","setLang","searchQuery","setSearchQuery","loadNews","useEffect","StatusBar","newsFromUserSearch","searchNews","FlatList","renderItem","item","keyExtractor","_id","String","Comment","paddingVertical","SinglePost","canOpenURL","createBottomTabNavigator","Stack","createNativeStackNavigator","Routes","NavigationContainer","Navigator","headerMode","initialRouteName","screenOptions","headerShown","Screen","component","App","useFonts","Poppins_400Regular","Poppins_700Bold"],"mappings":"sQAIaA,EAAcC,IAAWC,IAAI,UAAUC,MACvCC,EAAeH,IAAWC,IAAI,UAAUG,OAyExCC,EAEY,UAFZA,EAGc,UAHdA,EAIc,UAJdA,EAOK,UAKHC,EAnFMC,IAAWC,OAAO,CACnCC,KAAM,CACFC,KAAM,GAGVC,UAAW,CACPC,gBAAiB,WAGrBC,UAAW,CACPC,UAAW,SACXC,WAAY,SACZH,gBAAiB,UACjBF,KAAM,EACNR,MAAM,QAIVc,OAAQ,CACJF,UAAW,SACXC,WAAY,SACZH,gBAAiB,UACjBV,MAAO,OACPe,UAAWd,GAGfe,QAAS,CACLC,QAAS,OACTC,iBAAkB,IAAOrB,EACzBsB,eAAgB,IAAQlB,EACxBmB,SAAU,IACVC,YAAa,OACbC,aAAc,CACVtB,MAAO,EACPE,OAAQ,GAEZqB,cAAe,IACfC,aAAc,KACdC,UAAW,GAEfC,qBAAqB,CACjBC,WAAY,KAAQ9B,EAGpB+B,cAAe,IAAO/B,GAG1BgC,UAAW,CACPF,WAAY,IAAO1B,EACnB6B,aAAc,EACdF,cAAe,EACfG,UAAW,SACXC,MAAO,QACPC,gBAAiB,uBACjBC,iBAAkB,CAAClC,MAAO,EAAGE,OAAQ,GACrCiC,iBAAkB,EAClBC,SAAU,IAGdC,MAAO,CACHL,MAAO,UACPI,SAAU,GACVL,UAAW,UAEfO,KAAM,CACFN,MAAO,UACPI,SAAU,GACVL,UAAW,a,SCxDJQ,E,OARHC,EAAMlC,OAAO,CACrBmC,QAJgB,qCAKhBC,QAAS,IACTC,QAAS,CACL,YANW,iDCMJC,EARE,SAAOC,GAAP,SAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACAP,EAAIxC,IAAJ,8BAAsC8C,GAAQG,MACvD,SAACC,GACG,OAAOA,EAASC,KAAKC,aAHhB,qGCQFC,EARI,SAAOP,EAAMQ,GAAb,SAAAP,EAAAC,OAAA,kEAAAD,EAAA,MACFP,EAAIxC,IAAJ,aAAqBsD,EAArB,UAAqCR,GAAQG,MACtD,SAACC,GACG,OAAOA,EAASC,KAAKC,aAHd,qG,eCyBJG,EA5BC,WACZ,IACIC,EAEJ,OAHmBC,IAASC,IAI1B,IAAK,MACHF,EAAUG,UAAUC,UACPD,UAAUE,aACvB,MACF,IAAK,MACHL,EAAUM,IAAcC,gBAAgBC,SAASC,aACrCH,IAAcC,gBAAgBC,SAASE,eAAe,GAClE,MACF,IAAK,UACHV,EAAUM,IAAcK,YAAYC,iBAGxC,OAAGZ,EAEkBA,EAAQa,UAAU,EAAG,GACpBC,cAIb,M,2ECxBE,SAASC,EAAT,GAAkD,IAAnBC,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,MAChDC,EAAcC,EAAOJ,oBAMzB,MAJ0B,UAAjB,MAALE,OAAA,EAAAA,EAAOG,cACPF,EAAcC,EAAOE,kBAGlB,cAACC,EAAA,EAAD,CAAML,MAAO,CAACA,EAAOC,GAArB,SACEF,IAIb,IAAMG,EAASrE,IAAWC,OAAO,CAC7BgE,oBAAoB,CAChBQ,WAAY,iBACZH,WAAY,UAEhBC,iBAAiB,CACbE,WAAY,cACZH,WAAY,YCqCLD,EArDArE,IAAWC,OAAO,CAC7ByE,UAAU,CACNrE,gBAAiBP,GAErB6E,MAAO,CACHC,aAAc,EACd/E,OAAQ,IACRF,MAAO,QAGXkF,UAAU,CACNC,kBAAmB,GACnBpD,UAAW,OACXC,MAAO,UACPI,SAAU,IAIdgD,iBAAiB,CACbnE,QAAS,OACToE,cAAe,cACfF,kBAAmB,GACnBvD,cAAe,IAKnB0D,WAAW,GAMXC,eAAe,CACXtE,QAAS,OACToE,cAAe,OAInBG,KAAK,CACDC,aAAc,IAMlBC,SAAS,CACLD,aAAc,KCxCP,SAASE,EAAT,GAAiD,IAAhCtD,EAA+B,EAA/BA,MAAOuD,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,KAC5C,GAD6D,EAAXC,QACeC,oBAAS,IAA1E,WAAQC,EAAR,KAAkCC,EAAlC,KAiCA,OACE,eAACC,EAAA,EAAD,CACE1B,MACEpE,EAAaY,QAFjB,UAME,cAACmF,EAAA,EAAD,CACEC,QAAS,kBAAMC,IAAQC,QAAQT,IADjC,SAGE,cAACU,EAAA,EAAD,CAAOC,OAAQ,CAAEC,IAAKb,GACpBpB,MAAOE,EAAOM,UAGlB,cAAC0B,EAAA,EAAD,CACElC,MACEpE,EAAasB,qBAFjB,SAKE,cAAC4C,EAAD,CACEE,MACEE,EAAOQ,UAFX,SAKG7C,MAKL,cAACqE,EAAA,EAAD,CACElC,MAAOE,EAAOU,iBADhB,SAGE,eAACsB,EAAA,EAAD,CACElC,MAAOE,EAAOa,eADhB,UAQE,cAACY,EAAA,EAAD,CACE3B,MAAOE,EAAOc,KACdY,QAAS,kBAzEE,4BAAAtD,EAAAC,OAAA,4DAGI,QAAhBS,IAASC,GAHG,uBAIPkD,EAAqBtE,EAJd,WAI8BwD,EAJ9B,IAKbI,GAA2B,GAE3BW,YAAW,WACTX,GAA2B,KAC1B,KATU,kBAWNY,IAAUC,UAAUH,IAXd,cAcTI,EAAW,CACfC,QAAS3E,EACTA,MAAOA,EACP4E,IAAKpB,GAjBQ,WAAA/C,EAAA,MAoBFoE,IAAMC,MAAMJ,IApBV,0EAwBjBK,QAAQC,IAAI,WAAZ,MACAC,MAAM,2CAzBW,iEAyEIC,IAFjB,SAKGvB,EAGG,cAACwB,EAAA,EAAD,CAAWC,KAAK,eAAejD,MAAOE,EAAOY,WAAYoC,KAAM,GAAI1F,MAAM,YAFzE,cAACwF,EAAA,EAAD,CAAWC,KAAK,WAAWC,KAAM,GAAI1F,MAAM,YAQjD,cAACmE,EAAA,EAAD,CAAkB3B,MAAOE,EAAOgB,SAAhC,SACE,cAACiC,EAAA,EAAD,CAAQF,KAAK,sBAAsBC,KAAM,GAAI1F,MAAM,oB,YC/ChD0C,EAlDArE,IAAWC,OAAO,CAE7BgC,KAAM,CACFN,MAAO,UACPI,SAAU,GACVL,UAAW,UACX6F,QAAS,IAAO3H,GAGpBoD,OAAQ,CACJ3C,gBAAiB,kBACjBA,gBAAkBP,EAClB0H,YAAa,EACbC,YAAa,mBACb7C,aAAc,GACdhE,QAAS,OACToE,cAAe,MACfnF,OAAQ,GACR6H,eAAgB,SAChB5G,eAAgB,GAChBC,SAAU,IACVpB,MAAO,OAGXgI,WAAW,CACPnH,WAAY,SACZD,UAAW,SACXoB,MAAO,UACPf,QAAS,OACToE,cAAe,MACfnF,OAAQ,OACR6H,eAAgB,SAChBE,OAAQ,EACRL,QAAS,IAGbM,YAAa,CACTJ,YAAa,UACbD,YAAa,EACb7F,MAAO,UACPxB,KAAM,EACN4B,SAAU,GACVlC,OAAQ,GACR+H,OAAQ,EACRL,QAAS,EACT1H,OAAQ,UC5CD,SAASiI,EAAT,GAAiE,IAA/CC,EAA8C,EAA9CA,eAAgBC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,eAE1D,OACA,eAAC5B,EAAA,EAAD,CACIlC,MAAOE,EAAOrB,OADlB,UAGI,cAACqD,EAAA,EAAD,CACIlC,MAAOE,EAAOsD,WACdO,QACA,kBAAMD,KAHV,SAMI,cAACd,EAAA,EAAD,CAAWC,KAAK,UAAUC,KAAM,GAAI1F,MAAM,YAE9C,cAACwG,EAAA,EAAD,CACIC,aAAa,UACbC,mBAAiB,EACjBlE,MAAO,CACHhB,IAASmF,OAAO,CACdC,IAAK,CACHC,aAAc,UAGlBnE,EAAOwD,aAIXY,aAAc,SAAAxG,GAAI,OAAI8F,EAAe9F,IACrCyG,aAAcV,EACdW,gBACI,kBAAMV,U,8NCVP,SAASW,IACtB,MAAkClD,mBAAS,IAA3C,WAAOmD,EAAP,KAAkBC,EAAlB,KACA,EAAwBpD,mBAAS,IAAjC,WAAOlD,EAAP,KAAauG,EAAb,KACA,EAAsCrD,mBAAS,IAA/C,WAAOsD,EAAP,KAAoBC,EAApB,KAEMC,EAAW,SAAO1G,GAAP,eAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACIF,EAASC,IADb,OACTK,EADS,OAEfiG,EAAajG,GAFE,6DAqBjB,OARAsG,qBACE,0BAAA1G,EAAAC,OAAA,gDACQa,EAAeN,IACrB8F,EAAQxF,GACR2F,EAAS3F,GAHX,8DAIG,IAIH,eAACsC,EAAA,EAAD,CACE1B,MACEpE,EAAaU,OAFjB,UAKE,cAAC2I,EAAA,EAAD,CAAWjF,MAAM,SAEjB,cAAC2D,EAAD,CACEC,eAAgBkB,EAChBjB,YAAagB,EACbf,eACE,YA5BW,SAAOzF,EAAMQ,GAAb,QAAAP,EAAAC,OAAA,uDACZM,GACHkG,EAAS1G,GAFM,WAAAC,EAAA,MAIcM,EAAWP,EAAMQ,IAJ/B,OAIbqG,EAJa,OAKjBP,EAAaO,GALI,4DA6BTC,CAAW9G,EAAMwG,MAMvB,cAACO,EAAA,EAAD,CACE1G,KAAMgG,EACNW,WACE,gBAAGC,EAAH,EAAGA,KAAH,OACE,cAACnE,E,iWAAD,IAAWmE,KAGfC,aAAc,gBAAGC,EAAH,EAAGA,IAAH,OAAaC,OAAOD,SCrE1C,IAUetF,EAVArE,IAAWC,OAAO,CAC7ByE,UAAU,CACNrE,gBAAiBP,GAErB+J,QAAS,CACLxJ,gBAAiBP,EACjBgK,gBAAiB,MCPV,SAASD,IACpB,OACE,cAAC1B,EAAA,EAAD,CACAC,aAAa,UACbC,mBAAiB,EACjBlE,MACIE,EAAOwF,UCLjB,IAeexF,GAfArE,IAAWC,OAAO,CAC7ByE,UAAU,CACNrE,gBAAiBP,GAErB6E,MAAO,CACHhF,MAAO,OACPE,OAAQ,IAER+E,aAAc,MCCP,SAASmF,GAAT,GAAyD,EAAnCJ,IAAoC,IAA/B3H,EAA8B,EAA9BA,MAAgBuD,GAAc,EAAvBE,QAAuB,EAAdF,OAAc,EAAPC,KAC7D,OACE,eAACK,EAAA,EAAD,CACAE,QAAS,kBAAMC,IAAQgE,WAAW,sBAClC7F,MACIpE,EAAaY,QAHjB,UAWA,cAACmF,EAAA,EAAD,UAIE,cAACI,EAAA,EAAD,CAAOC,OAAQ,CAACC,IAAKb,GACpBpB,MAAOE,GAAOM,UAGlB,cAAC0B,EAAA,EAAD,CACAlC,MACCpE,EAAasB,qBAFd,SAKC,cAAC4C,EAAD,CACEE,MACEpE,EAAaiC,MAFjB,SAKIA,MAgBF,cAAC6H,EAAD,OC/CII,cAAZ,IAGMC,GAAQC,cAGC,SAASC,KACpB,OACI,cAACC,EAAA,EAAD,UACI,eAACH,GAAMI,UAAP,CACIC,WAAW,OACXC,iBAAkB5B,EAClB6B,cAAe,CACXC,aAAa,GAJrB,UAOI,cAACR,GAAMS,OAAP,CACIvD,KAAK,cACLwD,UAAWhC,EACX6B,cAAe,CACXC,aAAa,KAIrB,cAACR,GAAMS,OAAP,CACIvD,KAAK,aACLwD,UAAWb,GACXU,cAAe,CACXC,aAAa,UCjCtB,SAASG,KACtB,MAAsBC,YAAS,CAC3B,eAAkBC,IAClB,YAAeC,MAGnB,OALA,YAUE,cAACZ,GAAD,IAJO,cAAC/D,EAAA,EAAD,M","file":"static/js/app.df1be4c4.chunk.js","sourcesContent":["\nimport { Dimensions, StyleSheet } from 'react-native';\n\n\nexport const windowWidth = Dimensions.get('window').width;\nexport const windowHeight = Dimensions.get('window').height;\n\nconst globalStyles = StyleSheet.create({\n    fill: {\n        flex: 1,\n    },\n\n    backgound: {\n        backgroundColor: '#101828',\n    },\n\n    Globalbox: {\n        alignSelf: 'center',\n        alignItems: 'center',\n        backgroundColor: '#0E1220',\n        flex: 1,\n        width:'100%',\n        \n    },\n\n    subBox: {\n        alignSelf: 'center',\n        alignItems: 'center',\n        backgroundColor: '#0E1220',\n        width: '100%',\n        minHeight: windowHeight,\n    },\n\n    postBox: {\n        display: 'flex',\n        marginHorizontal: 0.05 * windowWidth,\n        marginVertical: 0.020 * windowHeight,\n        maxWidth: 900,\n        shadowColor: \"#FFF\",\n        shadowOffset: {\n            width: 0,\n            height: 1,\n        },\n        shadowOpacity: 0.23,\n        shadowRadius: 2.62,\n        elevation: 0,\n    },\n    containerTextPostBox:{\n        paddingTop: 0.025 * windowWidth,\n        // paddingLeft: 0.05 * windowWidth,\n        // paddingRight: 0.05 * windowWidth,\n        paddingBottom: 0.05 * windowWidth,\n    },\n\n    mainTitle: {\n        paddingTop: 0.05 * windowHeight,\n        marginBottom: 0,\n        paddingBottom: 0,\n        textAlign: 'center',\n        color: 'white',\n        textShadowColor: 'rgba(255,0,255,0.85)',\n        textShadowOffset: {width: 1, height: 1},\n        textShadowRadius: 5,\n        fontSize: 26,\n    },\n    \n    title: {\n        color: '#B7BABE',\n        fontSize: 20,\n        textAlign: 'center',\n    },\n    text: {\n        color: '#B7BABE',\n        fontSize: 16,\n        textAlign: 'justify',\n    },\n})\n\nexport const colors = {\n    mainColor: '#1494414',\n    mainBackgroundColor: '#0E1220',\n    secondBackgroundColor: '#101828',\n    darkerBackgroundColor: \"#06070D\",\n    textColor: '#B7BABE',\n    defaultBlack: '#0E1220',\n    defaultWhite: '#B7BABE',\n    defaultShadowColor: '#0000004d',\n    defaultShadowDimensions: '0 2 4',\n}\n\nexport default globalStyles","import axios from  'axios';\n\n\n/*\ncurl -XGET 'https://api.newscatcherapi.com/v2/search?q=Tesla' -H 'x-api-key: your_key_1'\n*/\n\nexport const baseUrl = `https://api.newscatcherapi.com/v2/`;\nexport const apiKey = `--OpI3FnWHfGu_ZQ88iiKVoEqcHssuX9E2vteNce3DQ`;\n\nconst api = axios.create({\n    baseURL: baseUrl,\n    timeout: 100000,\n    headers: {\n        'x-api-key': apiKey\n    }\n  });\n\nexport default api;\n","import api from \"./api\"\n\n/*/\nWITH THIS API IT IS POSSIBLE TO SEARCH AND CHOOSE THE LANGUAGE!\n*/\n\nconst newsData = async (lang) => {\n    return await api.get(`search?q=\"tecnologia\"&lang=${lang}`).then(\n        (response) => {\n            return response.data.articles\n        }\n    )  \n\n}\nexport default newsData","import api from \"./api\"\n\n/*/\nWITH THIS API IT IS POSSIBLE TO SEARCH AND CHOOSE THE LANGUAGE!\n*/\n\nconst newsSearch = async (lang, search) => {\n    return await api.get(`search?q=\"${search}\"&lang=${lang}`).then(\n        (response) => {\n            return response.data.articles\n        }\n    )  \n\n}\nexport default newsSearch","import { Platform, NativeModules} from 'react-native';\n\n\nconst getLang = () => {\n    let userPlatform = Platform.OS\n    let rawLang;\n    \n    switch (userPlatform) {\n      case 'web':\n        rawLang = navigator.language ||\n                     navigator.userLanguage;\n        break;\n      case 'ios':\n        rawLang = NativeModules.SettingsManager.settings.AppleLocale ||\n                    NativeModules.SettingsManager.settings.AppleLanguages[0]\n        break;\n      case 'android':\n        rawLang = NativeModules.I18nManager.localeIdentifier\n        break;\n    }\n    if(rawLang){\n      // News catcher api uses just the 2 first lower case language identifiers\n      let formatedLang = rawLang.substring(0, 2); \n      return formatedLang.toLowerCase();\n    }\n    else{\n      // In the case that something went wrong it will return just english!\n      return 'en'\n    }\n  }\n\nexport default getLang ","import React from 'react';\nimport { StyleSheet, Text} from 'react-native';\n\nexport default function TextFormatedRegular({ children, style }){\n    let styleOfFont = styles.TextFormatedRegular\n\n    if (style?.fontWeight === 'bold'){\n        styleOfFont = styles.TextFormatedBold\n    }\n    \n    return <Text style={[style, styleOfFont]}>\n            {children}\n        </Text>\n}\n\nconst styles = StyleSheet.create({\n    TextFormatedRegular:{\n        fontFamily: \"PoppinsRegular\",\n        fontWeight: 'normal',\n    },\n    TextFormatedBold:{\n        fontFamily: \"PoppinsBold\",\n        fontWeight: 'normal'\n        \n        }\n})","\n\nimport { StyleSheet } from 'react-native';\nimport { colors } from '../../globalStyles';\n\n\nconst styles = StyleSheet.create({\n    container:{\n        backgroundColor: colors.secondBackgroundColor,\n    },\n    image: {\n        borderRadius: 5,\n        height: 300,\n        width: '100%',\n    },\n\n    newsTitle:{\n        paddingHorizontal: 20,\n        textAlign: \"left\",\n        color: '#B7BABE',\n        fontSize: 20,\n\n    },\n\n    actionsContainer:{\n        display: 'flex',\n        flexDirection: 'row-reverse',\n        paddingHorizontal: 10,\n        paddingBottom: 20,\n\n        \n    },\n\n    clipAdvice:{\n        \n\n    },\n\n\n    iconsContainer:{\n        display: 'flex',\n        flexDirection: 'row',\n        \n    },\n\n    icon:{\n        paddingRight: 20,\n        // on mobile devices the cursos does not work, it crashes the metro!\n        // cursor: 'pointer'\n        \n    },\n\n    lastIcon:{\n        paddingRight: 0,\n    }\n\n\n})\n\nexport default styles","import React, { useState } from 'react';\nimport { Linking, TouchableOpacity, View, Image, SafeAreaView, Share, Platform, Clipboard } from 'react-native';\n\nimport { AntDesign, Entypo } from '@expo/vector-icons';\nimport globalStyles from '../../globalStyles';\n\n// import Clipboard from '@react-native-clipboard/clipboard';\n\nimport TextFormatedRegular from '../../components/TextFormated';\nimport styles from './styles';\n\n// import Share from 'react-native-share';\n\nexport default function Posts({ title, media, link, summary }) {\n  const [ displayclipboardMessage,  setDisplayclipboardMessage ] = useState(false)\n\n  const shareContent = async () => {\n    try{\n        // share exception for does not supported share function devices!\n        if(Platform.OS === 'web'){\n          const textToClipBoard = `${title}! click ${link} `\n          setDisplayclipboardMessage(true)\n\n          setTimeout(() => {\n            setDisplayclipboardMessage(false)\n          }, 2000);\n\n          return Clipboard.setString(textToClipBoard);\n        }\n\n        const shareOpt = {\n          message: title,\n          title: title,\n          url: link\n        }\n\n        return await Share.share(shareOpt)\n    }\n\n    catch(err){\n      console.log(\"error =>\", err);\n      alert(\"Share are not supported in this browser\")\n    }\n\n\n  }\n\n  return (\n    <SafeAreaView\n      style={\n        globalStyles.postBox\n      }\n    >\n\n      <TouchableOpacity\n        onPress={() => Linking.openURL(link)}\n      >\n        <Image source={{ uri: media }}\n          style={styles.image}\n        />\n      </TouchableOpacity>\n      <View\n        style={\n          globalStyles.containerTextPostBox\n        }\n      >\n        <TextFormatedRegular\n          style={\n            styles.newsTitle\n          }\n        >\n          {title}\n        </TextFormatedRegular>\n      </View>\n\n\n      <View\n        style={styles.actionsContainer}\n      >\n        <View\n          style={styles.iconsContainer}\n        >\n          {/* Function not avaliable! */}\n          {/* <TouchableOpacity style={styles.icon}>\n              <AntDesign  name=\"hearto\" size={24} color=\"white\" />\n            </TouchableOpacity> */}\n\n          <TouchableOpacity\n            style={styles.icon}\n            onPress={() => shareContent()}\n          >\n            {\n            !displayclipboardMessage ? (\n                <AntDesign name=\"sharealt\" size={24} color=\"white\" />\n              ) : (\n                <AntDesign name=\"checkcircleo\" style={styles.clipAdvice} size={24} color=\"#0f9f0f\" />\n              )\n            }\n            \n          </TouchableOpacity>\n\n          <TouchableOpacity style={styles.lastIcon}>\n            <Entypo name=\"dots-three-vertical\" size={24} color=\"white\" />\n          </TouchableOpacity>\n          \n\n        </View>\n      </View>\n\n\n    </SafeAreaView>\n  )\n}","\nimport { StyleSheet } from 'react-native';\n\nimport { colors, windowHeight } from \"../../globalStyles\"\n\nconst styles = StyleSheet.create({\n    \n    text: {\n        color: '#B7BABE',\n        fontSize: 16,\n        textAlign: 'justify',\n        padding: 0.01 * windowHeight\n    },\n    \n    search: {\n        backgroundColor: 'rgb(32, 33, 36)',\n        backgroundColor:  colors.darkerBackgroundColor,\n        borderWidth: 1,\n        borderColor: 'rgb(95, 99, 104)',\n        borderRadius: 24,\n        display: 'flex',\n        flexDirection: 'row',\n        height: 44,\n        justifyContent: 'center',\n        marginVertical: 24,\n        maxWidth: 906,\n        width: \"90%\",\n    },\n\n    searchIcon:{\n        alignItems: 'center',\n        alignSelf: 'center',\n        color: '#e8eaed',\n        display: 'flex',\n        flexDirection: 'row',\n        height: '100%',\n        justifyContent: 'center',\n        margin: 0,\n        padding: 10,\n    },\n\n    searchInput: {  \n        borderColor: '#000000',\n        borderWidth: 0,\n        color: '#e8eaed',\n        flex: 1,\n        fontSize: 16,   \n        height: 34,\n        margin: 0,\n        padding: 5,\n        height: '100%',\n    }\n})\n\n\nexport default styles","import { Text,  TextInput, View, Keyboard, Platform } from 'react-native';\nimport styles from './styles';\nimport { AntDesign } from '@expo/vector-icons'; \nimport React, { useEffect, useState } from 'react';\n\n\nexport default function Search({ setStateSearch, stateSearch, actionOnSubmit }){\n\n    return (\n    <View\n        style={styles.search}\n    >\n        <View\n            style={styles.searchIcon}\n            onClick={\n            () => actionOnSubmit()\n            }\n        >\n            <AntDesign name=\"search1\" size={24} color=\"white\" />\n        </View>\n        <TextInput \n            keyboardType='default'\n            selectTextOnFocus\n            style={[\n                Platform.select({\n                  web: {\n                    outlineStyle: 'none',\n                  }})\n                  ,\n                styles.searchInput\n            ]\n            }\n\n            onChangeText={text => setStateSearch(text)}\n            defaultValue={stateSearch}\n            onSubmitEditing={\n                () => actionOnSubmit()\n            }\n\n\n        />\n      </View>\n    )\n}\n","//react and dependencies\nimport React, { useEffect, useState } from 'react';\nimport { SafeAreaView, FlatList } from 'react-native';\nimport { StatusBar } from 'expo-status-bar';\n\n//styles\nimport globalStyles from '../../globalStyles';\n\n//service\nimport newsData from '../../service/newsData';\nimport newsSearch from '../../service/newsSearch';\n\n//utils\nimport getLang from '../../utils/getLang';\n\n\n//components\nimport Posts from '../Posts'\nimport Search from '../../components/Search';\n\n{/*\nIt is possible to get the os and use it as a condition!\n  Platform.OS == \"ios\" ? \"padding\" : \"height\"\n*/}\n\n\nexport default function LandingPage() {\n  const [newsDatas, setNewsDatas] = useState([])\n  const [lang, setLang] = useState('')\n  const [searchQuery, setSearchQuery] = useState('')\n\n  const loadNews = async (lang) => {\n    const data = await newsData(lang)\n    setNewsDatas(data)\n  }\n\n  const searchNews = async (lang, search) => {\n    if (!search) {\n      loadNews(lang)\n    }\n    let newsFromUserSearch = await newsSearch(lang, search)\n    setNewsDatas(newsFromUserSearch)\n  }\n\n  useEffect(\n    async () => {\n      const userLanguage = getLang()\n      setLang(userLanguage)\n      loadNews(userLanguage)\n    }, []\n  )\n\n  return (\n    <SafeAreaView\n      style={\n        globalStyles.subBox\n      }\n    >\n      <StatusBar style=\"none\" />\n\n      <Search\n        setStateSearch={setSearchQuery}\n        stateSearch={searchQuery}\n        actionOnSubmit={\n          () => {\n            searchNews(lang, searchQuery)\n          }\n        }\n      />\n\n\n      <FlatList\n        data={newsDatas}\n        renderItem={\n          ({ item }) => (\n            <Posts {...item} />\n          )\n        }\n        keyExtractor={({ _id }) => String(_id)}\n      />\n    </SafeAreaView>\n  );\n}\n\n","\n\nimport {StyleSheet, TouchableOpacity} from 'react-native';\n\n\n\nimport { colors } from '../../globalStyles';\n\n\nconst styles = StyleSheet.create({\n    container:{\n        backgroundColor: colors.mainBackgroundColor,\n    },\n    Comment: {\n        backgroundColor: colors.defaultWhite,\n        paddingVertical: 10,\n    }\n})\n\nexport default styles ","import React from 'react';\n\nimport { StatusBar } from 'expo-status-bar';\nimport { TextInput } from 'react-native';\n\nimport styles from './styles';\n\n\nexport default function Comment() {\n    return (\n      <TextInput \n      keyboardType='default'\n      selectTextOnFocus\n      style={\n          styles.Comment\n      }\n\n      />\n        )\n    }","\n\nimport {StyleSheet, TouchableOpacity} from 'react-native';\n\n\n\nimport { colors } from '../../globalStyles';\n\n\nconst styles = StyleSheet.create({\n    container:{\n        backgroundColor: colors.secondBackgroundColor,\n    },\n    image: {\n        width: '100%',\n        height: 200,\n        \n        borderRadius: 15,\n        // marginVertical: 10,\n        // borderRadius: 10\n    }\n\n})\n\nexport default styles","import React, { useEffect } from 'react';\nimport { Linking, TouchableOpacity, View } from 'react-native';\n\nimport { Image, Text, SafeAreaView, KeyboardAvoidingView } from 'react-native';\n\nimport globalStyles from '../../globalStyles';\n\nimport Comment from '../../components/Comment';\nimport TextFormatedRegular from '../../components/TextFormated';\nimport styles from './styles';\n\n/*\nonPress={() =>\n          navigation.push('Details', {\n            itemId: Math.floor(Math.random() * 100),\n          })\n*/\n\nexport default function SinglePost({ _id, title, summary, media, link}) {\n    return (\n      <SafeAreaView\n      onPress={() => Linking.canOpenURL('http://google.com')}\n      style={\n          globalStyles.postBox\n      }\n      >\n      {/* <Text style={{color: 'blue'}}\n        onPress={() => Linking.openURL('http://google.com')}\n        >\n        Google\n      </Text> */}        \n      <TouchableOpacity\n      // onPress={() => Linking.openURL(link)}\n      // onPress={() => navigation.navigate('Posts')}\n      >\n        <Image source={{uri: media}}\n         style={styles.image}\n         />\n      </TouchableOpacity>\n     <View\n     style={\n      globalStyles.containerTextPostBox\n    }\n     >\n      <TextFormatedRegular\n        style={\n          globalStyles.title\n        }\n      >\n        { title }\n      </TextFormatedRegular>\n     </View>\n\n      {/* <TextFormatedRegular\n          style={\n            globalStyles.text\n          }\n          >\n     { authors.map(\n       author => <TextFormatedRegular>{author}</TextFormatedRegular>\n       ) }\n        </TextFormatedRegular> */}\n\n\n     \n        <Comment />\n      </SafeAreaView>\n      ) \n    }","import React from \"react\";\nimport { requireNativeComponent } from \"react-native\";\n\n\nimport {createBottomTabNavigator} from '@react-navigation/bottom-tabs'\n\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\n\nimport LandingPage from \"./screens/LandingPage\";\n\nimport SinglePost from \"./screens/SinglePost\";\n\n\nimport Posts from \"./screens/Posts\";\n\nconst Tab = createBottomTabNavigator();\n\n\nconst Stack = createNativeStackNavigator();\n\n\nexport default function Routes(){\n    return(\n        <NavigationContainer>\n            <Stack.Navigator\n                headerMode='none'\n                initialRouteName={LandingPage}\n                screenOptions={{\n                    headerShown: false\n                  }}\n                >\n                <Stack.Screen\n                    name=\"LandingPage\"\n                    component={LandingPage}\n                    screenOptions={{\n                        headerShown: false\n                      }}\n                />\n\n                <Stack.Screen   \n                    name=\"SinglePost\"\n                    component={SinglePost}\n                    screenOptions={{\n                        headerShown: false\n                      }}\n                />\n            </Stack.Navigator>\n        </NavigationContainer>\n    )\n}\n","import React from 'react';\nimport { View } from 'react-native';\n\n\nimport { \n  useFonts,\n  Poppins_400Regular,\n  Poppins_700Bold \n} from '@expo-google-fonts/poppins'\n\nimport Routes from './src/Routes';\n\n\nexport default function App() {\n  const [fontsLoaded] = useFonts({\n      'PoppinsRegular': Poppins_400Regular, \n      'PoppinsBold': Poppins_700Bold \n    })\n\n  if(!fontsLoaded){\n    return <View/>\n  }\n\n  return (\n    <Routes />\n  );\n}\n"],"sourceRoot":""}